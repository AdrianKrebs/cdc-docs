(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{153:function(e,t,r){"use strict";r.r(t);var a=r(0),i=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"introduction-to-cdc-testing"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#introduction-to-cdc-testing","aria-hidden":"true"}},[e._v("#")]),e._v(" Introduction to CDC Testing")]),r("p",[e._v("In order to countiniously and independently deploy software, the microservice architecture became state of the art for large scale enterprise applications.")]),r("p",[r("img",{attrs:{src:"microservice.jpg",alt:"architecture"}})]),r("ul",[r("li",[r("b",[e._v("Monolith: ")]),e._v("detect breaking changes at "),r("b",[e._v("compile time")])]),r("li",[r("b",[e._v("Micorservice: ")]),e._v("detect breaking changes at "),r("b",[e._v("runtime")])])]),r("p",[e._v("Imagine the following situation: "),r("br"),e._v("\nProvider changes his interface, refactors, refactors tests as well, everything green"),r("br"),e._v("\nIn the providers CI/CD pipline, all tests are passing"),r("br"),e._v("\nGO FOR Production! "),r("br"),e._v("\nMonitoring shows no Errors for the ProviderService"),r("br")]),r("p",[e._v("But suddenly the ConsumerService fails every request..."),r("br"),e._v("\nBlaming starts..."),r("br"),e._v("\nMaybe we should have tested this..."),r("br"),e._v("\nBut how?"),r("br")]),r("p",[e._v("Obvious Solution: Service Tests  "),r("br"),e._v("\nStart the frontend. Start other consumed services. We need test data. In addition, we need tokens, certificates, authentication, ..."),r("br"),e._v("\nWhat a nightmare! This results in a full E2E test. But we only wanted test the interaction between the two services."),r("br"),e._v("\nWe want to know very early and fast that we break something.")]),r("p",[r("b",[e._v("Contracts come into play")])]),r("p",[r("img",{attrs:{src:"teams.jpg",alt:"teams"}})]),r("p",[e._v("The "),r("a",{attrs:{href:"https://docs.pact.io"}},[e._v("Pact Framework")]),e._v(" offers CDC testing implementations for most languages (Java, Javascript, Ruby, Swift, Android, Go). "),r("br")]),r("h2",{attrs:{id:"provider-workflow"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#provider-workflow","aria-hidden":"true"}},[e._v("#")]),e._v(" Provider Workflow")]),r("p",[r("b",[e._v("Goal")]),e._v(": Don't deploy breaking changes")]),r("ul",[r("li",[e._v("Implements Changes")]),r("li",[e._v("Get contracts from all consumers")]),r("li",[e._v("Replay and verify interactions - Stop introduction of breaking change very early")]),r("li",[e._v("Deploy service")])]),r("h2",{attrs:{id:"consumer-workflow"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#consumer-workflow","aria-hidden":"true"}},[e._v("#")]),e._v(" Consumer Workflow")]),r("p",[r("b",[e._v("Goal")]),e._v(": Dont consume resources which are not provided")]),r("ul",[r("li",[e._v("Implement changes")]),r("li",[e._v("Generate contract")]),r("li",[e._v("Push contract to provider")]),r("li",[e._v("Each provider verifies contracts")]),r("li",[e._v("Deploy service")])]),r("div",{staticClass:"tip custom-block"},[r("p",{staticClass:"custom-block-title"},[e._v("TIP")]),r("p",[e._v("Use the "),r("a",{attrs:{href:"https://martinfowler.com/bliki/TolerantReader.html"}},[e._v("Tolerant Reader Pattern")]),e._v(" as a verification philosophy (unnecessary fields are ignored)")])])])}],!1,null,null,null);t.default=i.exports}}]);